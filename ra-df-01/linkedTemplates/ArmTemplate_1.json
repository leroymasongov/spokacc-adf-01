{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ra-df-01"
		},
		"triggerNewSvlFile_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/73fcf868-2d25-43c5-a736-162a94432e65/resourceGroups/ra-rg-central-01/providers/Microsoft.Storage/storageAccounts/rastoracc02"
		},
		"triggerNewSourceFile_properties_ingest-new-nms-files-to-radb_parameters_radbContainer": {
			"type": "string",
			"defaultValue": "nms-items"
		},
		"triggerNewSourceFile_properties_ingest-new-nms-files-to-radb_parameters_blobContainerName": {
			"type": "string",
			"defaultValue": "nms-files-input"
		},
		"triggerNewSourceFile_properties_ingest-new-nms-files-to-radb_parameters_triggerFilePath": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.fileName"
		},
		"triggerNewSourceFile_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/73fcf868-2d25-43c5-a736-162a94432e65/resourceGroups/ra-rg-central-01/providers/Microsoft.Storage/storageAccounts/rastoracc02"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline-python-test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python radb-batch.py",
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Custom1_copy1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python radb-batch.py",
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/python-test_chunkid-w-params')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "call py func with params",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python ChunkId_cmd.py \"L90353_records.csv\"",
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "call py func with params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "chunkid",
							"value": {
								"value": "@activity('call py func with params').output.CustomOutput.ChunkId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "call py func with params_copy1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python ChunkId_cmd.py \"L90353_records.csv\"",
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"chunkid": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ra-func-process-orch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Invoke-preprologger-function",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "python cmd_PreProLogger.py @{pipeline().parameters.raPipelineId} @{pipeline().parameters.ChunkID} @{pipeline().parameters.nmsHeaderStartTime}",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "query-results",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Invoke-preprologger-function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "queryResult",
							"value": "'ok'"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"radbContainer": {
						"type": "string",
						"defaultValue": "nms-items"
					},
					"blobContainerName": {
						"type": "string",
						"defaultValue": "nms-files-input"
					},
					"triggerFilePath": {
						"type": "string",
						"defaultValue": "L88981_records.csv"
					},
					"ChunkID": {
						"type": "string",
						"defaultValue": "88981"
					},
					"raPipelineId": {
						"type": "string",
						"defaultValue": "0233e136-530e-48e4-83f7-ad9723acf2a3"
					},
					"nmsHeaderStartTime": {
						"type": "string",
						"defaultValue": "2021-08-16T18:01:56"
					}
				},
				"variables": {
					"RowNo": {
						"type": "String",
						"defaultValue": "0"
					},
					"triggerFileName": {
						"type": "String"
					},
					"chunkId": {
						"type": "String"
					},
					"queryResult": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T05:45:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/svlconvToRaNmsChunkFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "svl-conv",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "SetTriggerFilePath",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "powershell \"ls\"\n\npowershell \"Write-Host 'calling Expand-Archive'\"\n\n\npowershell \"Expand-Archive -Path svlconv.zip -Destination .\"\n\npowershell \"Write-Host 'running python svlconv' \"\n\n# download files from blob container \n\npowershell \" azcopy copy  'https://rastoracc02.blob.core.windows.net/nms-files-sync-aws?sv=2020-04-08&st=2021-09-30T05%3A36%3A23Z&se=2025-10-01T05%3A36%3A00Z&sr=c&sp=racwdxlt&sig=cpZ5cvnSypBK2MLh4%2B9buGQ%2FOizjqO6Dv8q2svJ4K5Y%3D'   '.\\L@{pipeline().parameters.ChunkId}.SVL' --include-pattern L@{pipeline().parameters.ChunkId}.SVL --recursive \"\n\npowershell \"python ra-SvlConvToText\\main.py 'L@{pipeline().parameters.ChunkId}.SVL \"\n\npowershell \" azcopy copy '.\\'         'https://rastoracc02.blob.core.windows.net/nms-files-sync-aws?sv=2020-04-08&st=2021-09-30T05%3A36%3A23Z&se=2025-10-01T05%3A36%3A00Z&sr=c&sp=racwdxlt&sig=cpZ5cvnSypBK2MLh4%2B9buGQ%2FOizjqO6Dv8q2svJ4K5Y%3D'  --include-pattern 'L@{pipeline().parameters.ChunkId}*.json;@{pipeline().parameters.ChunkId}_*.csv'  --recursive \"\n\n\n# upload results to blob container",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "svlconv-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SetTriggerFilePath",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vTriggerFilePAth",
							"value": {
								"value": "@{pipeline().parameters.triggerFilePath}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ChunkId": {
						"type": "string"
					},
					"TriggerFilePath": {
						"type": "string"
					}
				},
				"variables": {
					"vTriggerFilePAth": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfLoadRecordsCSV')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "nmsMeasCSV2",
								"type": "DatasetReference"
							},
							"name": "sourceNmsFiles"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "radbRecordsForDF",
								"type": "DatasetReference"
							},
							"name": "sinkRadb"
						}
					],
					"transformations": [
						{
							"name": "AddDerivedCols"
						},
						{
							"name": "SetRowNumber"
						}
					],
					"script": "parameters{\n\tRaPipelineIdParam as string ('not-set')\n}\nsource(output(\n\t\tflag as string,\n\t\tmeasurements_0 as string,\n\t\tmeasurements_1 as string,\n\t\tmeasurements_2 as string,\n\t\tmeasurements_3 as string,\n\t\tmeasurements_4 as string,\n\t\tmeasurements_5 as string,\n\t\tmeasurements_6 as string,\n\t\tmeasurements_7 as string,\n\t\tmeasurements_8 as string,\n\t\tmeasurements_9 as string,\n\t\tmeasurements_10 as string,\n\t\tmeasurements_11 as string,\n\t\tmeasurements_12 as string,\n\t\tmeasurements_13 as string,\n\t\tmeasurements_14 as string,\n\t\tmeasurements_15 as string,\n\t\tmeasurements_16 as string,\n\t\tmeasurements_17 as string,\n\t\toctaves_0 as string,\n\t\toctaves_1 as string,\n\t\toctaves_2 as string,\n\t\toctaves_3 as string,\n\t\toctaves_4 as string,\n\t\toctaves_5 as string,\n\t\toctaves_6 as string,\n\t\toctaves_7 as string,\n\t\toctaves_8 as string,\n\t\toctaves_9 as string,\n\t\toctaves_10 as string,\n\t\toctaves_11 as string,\n\t\toctaves_12 as string,\n\t\toctaves_13 as string,\n\t\toctaves_14 as string,\n\t\toctaves_15 as string,\n\t\toctaves_16 as string,\n\t\toctaves_17 as string,\n\t\toctaves_18 as string,\n\t\toctaves_19 as string,\n\t\toctaves_20 as string,\n\t\toctaves_21 as string,\n\t\toctaves_22 as string,\n\t\toctaves_23 as string,\n\t\toctaves_24 as string,\n\t\toctaves_25 as string,\n\t\toctaves_26 as string,\n\t\toctaves_27 as string,\n\t\toctaves_28 as string,\n\t\toctaves_29 as string,\n\t\toctaves_30 as string,\n\t\toctaves_31 as string,\n\t\toctaves_32 as string,\n\t\toctaves_33 as string,\n\t\te_compass_correction as string,\n\t\tdirection_xy as string,\n\t\tenergy_xy as string,\n\t\tdirection_z as string,\n\t\tenergy_z as string,\n\t\tenergy_dist_xy_0 as string,\n\t\tenergy_dist_xy_1 as string,\n\t\tenergy_dist_xy_2 as string,\n\t\tenergy_dist_xy_3 as string,\n\t\tenergy_dist_xy_4 as string,\n\t\tenergy_dist_xy_5 as string,\n\t\tenergy_dist_xy_6 as string,\n\t\tenergy_dist_xy_7 as string,\n\t\tenergy_dist_xy_8 as string,\n\t\tenergy_dist_xy_9 as string,\n\t\tenergy_dist_xy_10 as string,\n\t\tenergy_dist_xy_11 as string,\n\t\tenergy_dist_xy_12 as string,\n\t\tenergy_dist_xy_13 as string,\n\t\tenergy_dist_xy_14 as string,\n\t\tenergy_dist_xy_15 as string,\n\t\tenergy_dist_xy_16 as string,\n\t\tenergy_dist_xy_17 as string,\n\t\tenergy_dist_xy_18 as string,\n\t\tenergy_dist_xy_19 as string,\n\t\tenergy_dist_xy_20 as string,\n\t\tenergy_dist_xy_21 as string,\n\t\tenergy_dist_xy_22 as string,\n\t\tenergy_dist_xy_23 as string,\n\t\tenergy_dist_xy_24 as string,\n\t\tenergy_dist_xy_25 as string,\n\t\tenergy_dist_xy_26 as string,\n\t\tenergy_dist_xy_27 as string,\n\t\tenergy_dist_xy_28 as string,\n\t\tenergy_dist_xy_29 as string,\n\t\tenergy_dist_xy_30 as string,\n\t\tenergy_dist_xy_31 as string,\n\t\tenergy_dist_z_0 as string,\n\t\tenergy_dist_z_1 as string,\n\t\tenergy_dist_z_2 as string,\n\t\tenergy_dist_z_3 as string,\n\t\tenergy_dist_z_4 as string,\n\t\tenergy_dist_z_5 as string,\n\t\tenergy_dist_z_6 as string,\n\t\tenergy_dist_z_7 as string,\n\t\tenergy_dist_z_8 as string,\n\t\tenergy_dist_z_9 as string,\n\t\tenergy_dist_z_10 as string,\n\t\tenergy_dist_z_11 as string,\n\t\tenergy_dist_z_12 as string,\n\t\tenergy_dist_z_13 as string,\n\t\tenergy_dist_z_14 as string,\n\t\tenergy_dist_z_15 as string,\n\t\tenergy_dist_z_16 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'NmsFile',\n\twildcardPaths:['*_records.csv']) ~> sourceNmsFiles\nsourceNmsFiles derive(RowNumber = 1,\n\t\tRaPipelineId = $RaPipelineIdParam,\n\t\tNmsDocumentType = 'records') ~> AddDerivedCols\nAddDerivedCols keyGenerate(output(RowNumber as long),\n\tstartAt: 1L) ~> SetRowNumber\nSetRowNumber sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tpartitionKey: ['/RaPipelineId'],\n\tthroughput: (0),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkRadb"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingest-new-nms-files-to-radb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy-header-to-radb",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "assert-chunk-acquire-success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "RaPipelineId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "NmsFile",
										"value": "$$FILEPATH"
									},
									{
										"name": "NmsDocumentType",
										"value": {
											"value": "@concat('header')",
											"type": "Expression"
										}
									},
									{
										"name": "ChunkId",
										"value": {
											"value": "@variables('chunkId')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*_header.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "NMSMeasurementJSON",
								"type": "DatasetReference",
								"parameters": {
									"chunkid": {
										"value": "@variables('chunkId')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "radb",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@pipeline().parameters.radbContainer",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy-summary-to-radb",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "assert-chunk-acquire-success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "RaPipelineId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "NmsFile",
										"value": "$$FILEPATH"
									},
									{
										"name": "NmsDocumentType",
										"value": {
											"value": "@concat('summary')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*_summary.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "NMSMeasurementJSON",
								"type": "DatasetReference",
								"parameters": {
									"chunkid": {
										"value": "@variables('chunkId')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "radb",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@pipeline().parameters.radbContainer",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy-gps-csv-to-radb",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "assert-chunk-acquire-success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "RaPipelineId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "NmsFile",
										"value": "$$FILEPATH"
									},
									{
										"name": "NmsDocumentType",
										"value": {
											"value": "@concat('gps')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*_gps.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "nmsMeasCSV2",
								"type": "DatasetReference",
								"parameters": {
									"chunkid": {
										"value": "@variables('chunkId')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "radb",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@pipeline().parameters.radbContainer",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "validate-incoming-chunk",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "Set-incoming-file-name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "python ChunkId_cmd.py \"@{pipeline().parameters.triggerFilePath}\"",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set-incoming-file-name",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "triggerFileName",
							"value": {
								"value": "@pipeline().parameters.triggerFilePath",
								"type": "Expression"
							}
						}
					},
					{
						"name": "assert-chunk-acquire-success",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "validate-incoming-chunk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "chunkId",
							"value": {
								"value": "@string(int(activity('validate-incoming-chunk').output.customOutput.ChunkId))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "derive-nms-measurement-timestamp",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "Copy-gps-csv-to-radb",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set-nms-records-start-time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "python raNmsRecords_Derive_Timestamp.py --ifile @{pipeline().parameters.triggerFilePath} --chunkid @{variables('chunkId')} --starttime @{variables('NmsRecordsStartTime')}",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "batchStorage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "ra-function-input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch4",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy-records-csv-to-radb",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "derive-nms-measurement-timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "RaPipelineId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "NmsFile",
										"value": "$$FILEPATH"
									},
									{
										"name": "NmsDocumentType",
										"value": {
											"value": "@concat('records')",
											"type": "Expression"
										}
									},
									{
										"name": "ChunkId",
										"value": {
											"value": "@variables('chunkId')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*_records_with_derived_timestamp.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "nmsRecordsCsv",
								"type": "DatasetReference",
								"parameters": {
									"chunkid": {
										"value": "@variables('chunkId')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "radbRecords",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup-header-timestamp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy-header-to-radb",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy-gps-csv-to-radb",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"query": {
									"value": "SELECT c.params_global_settings.measure_start_datetime FROM c \nwhere \n    c.RaPipelineId = '@{pipeline().RunId}'\n    and c.NmsDocumentType = 'header' \n    ",
									"type": "Expression"
								},
								"preferredRegions": [],
								"detectDatetime": true
							},
							"dataset": {
								"referenceName": "radb",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "nms-items"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "exec-ra-func-process",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy-records-csv-to-radb",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy-summary-to-radb",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ra-func-process-orch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"radbContainer": {
									"value": "@pipeline().parameters.radbContainer",
									"type": "Expression"
								},
								"blobContainerName": {
									"value": "@pipeline().parameters.blobContainerName",
									"type": "Expression"
								},
								"triggerFilePath": {
									"value": "@pipeline().parameters.triggerFilePath",
									"type": "Expression"
								},
								"ChunkID": {
									"value": "@variables('chunkId')",
									"type": "Expression"
								},
								"raPipelineId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"nmsHeaderStartTime": {
									"value": "@{variables('NmsRecordsStartTime')}",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "set-nms-records-start-time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-header-timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "NmsRecordsStartTime",
							"value": {
								"value": "@{activity('Lookup-header-timestamp').output.firstRow.measure_start_datetime}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"radbContainer": {
						"type": "string",
						"defaultValue": "nms-items"
					},
					"blobContainerName": {
						"type": "string",
						"defaultValue": "nms-files-input"
					},
					"triggerFilePath": {
						"type": "string",
						"defaultValue": "L88981_records.csv"
					}
				},
				"variables": {
					"RowNo": {
						"type": "String",
						"defaultValue": "0"
					},
					"triggerFileName": {
						"type": "String"
					},
					"chunkId": {
						"type": "String"
					},
					"queryResult": {
						"type": "String"
					},
					"NmsRecordsStartTime": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T05:45:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ra-func-process-orch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerNewSvlFile')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "svlconvToRaNmsChunkFiles",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/nms-files-sync-aws/blobs/",
					"blobPathEndsWith": "*.SVL",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('triggerNewSvlFile_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/svlconvToRaNmsChunkFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerNewSourceFile')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ingest-new-nms-files-to-radb",
							"type": "PipelineReference"
						},
						"parameters": {
							"radbContainer": "[parameters('triggerNewSourceFile_properties_ingest-new-nms-files-to-radb_parameters_radbContainer')]",
							"blobContainerName": "[parameters('triggerNewSourceFile_properties_ingest-new-nms-files-to-radb_parameters_blobContainerName')]",
							"triggerFilePath": "[parameters('triggerNewSourceFile_properties_ingest-new-nms-files-to-radb_parameters_triggerFilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/nms-files-input/blobs/",
					"blobPathEndsWith": "_records.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('triggerNewSourceFile_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingest-new-nms-files-to-radb')]"
			]
		}
	]
}